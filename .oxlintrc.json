{
  "$schema": "./node_modules/oxlint/configuration_schema.json",
  // plugins: 用于扩展 oxlint 的功能，例如添加对 TypeScript 或特定代码风格的检查。
  "plugins": ["unicorn", "typescript", "import"],
  // categories: 定义不同类别规则的严重级别。
  "categories": {
    "correctness": "error"
  },
  // env: 定义代码运行的环境，这有助于 linter 理解全局变量和特定环境的 API。
  "env": {
    "builtin": true,
    "es2020": true,
    "commonjs": true,
    "node": true,
    "shared-node-browser": true
  },
  // ignorePatterns: 定义 linter 应该忽略的文件和目录。
  "ignorePatterns": [
    "dist/**",
    "node_modules/**",
    "coverage/**",
    ".github/**",
    ".husky/**",
    ".vscode/**",
    "scripts/**",
    "docs/**",
    "dist-docs/**",
    "*.md",
    "*.json",
    "*.yaml",
    "*.yml",
    "*.lock",
    // "*.config.*", // 已移除此项，以确保 *.config.ts/js 等配置文件也能被 lint 检查
    "LICENSE",
    ".editorconfig",
    ".gitignore",
    ".gitattributes",
    ".lintstagedrc",
    "pnpm-lock.yaml",
    "package.json",
    "tsconfig.json"
  ],
  // rules: 用于自定义特定规则的严重级别或行为。
  "rules": {
    "curly": "error",
    "no-unexpected-multiline": "error",
    "unicorn/empty-brace-spaces": "off",
    "unicorn/no-nested-ternary": "off",
    "unicorn/number-literal-case": "off",
    "no-var": "error",
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "no-array-constructor": "error",
    "no-unused-expressions": "error",
    "no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_"
      }
    ],
    "for-direction": "error",
    "no-async-promise-executor": "error",
    "no-case-declarations": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": "error",
    "no-constant-binary-expression": "error",
    "no-constant-condition": "error",
    "no-control-regex": "error",
    "no-debugger": "error",
    "no-delete-var": "error",
    "no-dupe-else-if": "error",
    "no-duplicate-case": "error",
    "no-empty": "error",
    "no-empty-character-class": "error",
    "no-empty-pattern": "error",
    "no-empty-static-block": "error",
    "no-ex-assign": "error",
    "no-extra-boolean-cast": "error",
    "no-fallthrough": "error",
    "no-global-assign": "error",
    "no-invalid-regexp": "error",
    "no-irregular-whitespace": "error",
    "no-loss-of-precision": "error",
    "no-nonoctal-decimal-escape": "error",
    "no-prototype-builtins": "error",
    "no-regex-spaces": "error",
    "no-self-assign": "error",
    "no-shadow-restricted-names": "error",
    "no-sparse-arrays": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-optional-chaining": "error",
    "no-unused-labels": "error",
    "no-unused-private-class-members": "error",
    "no-useless-backreference": "error",
    "no-useless-catch": "error",
    "no-useless-escape": "error",
    "require-yield": "error",
    "use-isnan": "error",
    "valid-typeof": "error",
    "no-class-assign": "off",
    "no-const-assign": "off",
    "no-dupe-class-members": "off",
    "no-dupe-keys": "off",
    "no-func-assign": "off",
    "no-import-assign": "off",
    "no-new-native-nonconstructor": "off",
    "no-obj-calls": "off",
    "no-redeclare": "off",
    "no-setter-return": "off",
    "no-this-before-super": "off",
    "no-unsafe-negation": "off",
    "no-with": "off",
    "@typescript-eslint/ban-ts-comment": "error",
    "@typescript-eslint/consistent-type-imports": "error",
    "@typescript-eslint/no-duplicate-enum-values": "error",
    "@typescript-eslint/no-empty-object-type": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-extra-non-null-assertion": "error",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-namespace": "error",
    "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/no-unnecessary-type-constraint": "error",
    "@typescript-eslint/no-unsafe-declaration-merging": "error",
    "@typescript-eslint/no-unsafe-function-type": "error",
    "@typescript-eslint/no-wrapper-object-types": "error",
    "@typescript-eslint/prefer-as-const": "error",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/triple-slash-reference": "error"
  },
  "overrides": [] // overrides: 特定文件或文件模式的规则覆盖，目前为空。
}
